@rendermode InteractiveServer
@using AutoMapper
@using Model.Dtos
@using Model.ViewModels
@using ButtonType = MudBlazor.ButtonType
@using Color = MudBlazor.Color
@inject HttpClient Http
@inject IMapper Mapper

<MudText Typo="Typo.h3">Post Form</MudText>
<MudText Typo="Typo.subtitle1">This form is made using <em>MudBlazor</em>.</MudText>

@* Uses EditForm to enable DataAnnotations *@
<EditForm Model="post" FormName="PostForm" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator/>
    <MudGrid>
        <MudItem xs="12" sm="10" lg="6">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Title" @bind-Value="post.Title" For="() => post.Title" Clearable/>
                    <MudTextField Label="Description (optional)" @bind-Value="post.Description" For="() => post.Description" Clearable Counter="100"/>
                    <MudTextField Label="Content" @bind-Value="post.Content" For="() => post.Content" ShrinkLabel Clearable Counter="500" AutoGrow Lines="5"/>
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Submit</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    PostViewModel post = new();

    private async Task HandleSubmit()
    {
        var dto = Mapper.Map<PostDto>(post);
        var response = await Http.PostAsJsonAsync("api/post", dto);
        if (response.IsSuccessStatusCode)
        {
            post = new PostViewModel();
        }
    }

}